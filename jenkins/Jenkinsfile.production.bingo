node {
  println "Building and deploying '${params.GIT_HASH}'"

  stage('Checkout') {
    //git 'git@github.com:uken/spring_demo.git'
    //sh "git checkout ${params.GIT_HASH}"
    checkout(scm)
  }

  maven_version = sh(returnStdout: true, script: """
    ./mvnw -q \
    -Dexec.executable="echo" \
    -Dexec.args='\${project.version}' \
    --non-recursive \
    org.codehaus.mojo:exec-maven-plugin:1.3.1:exec
  """).trim()

  app_name = "spring_demo"
  app_version = "v_${maven_version}_BNG_${currentBuild.number}"

  stage('Tests') {
    sh "./mvnw verify"
  }

  stage('Maven build') {
    sh "./mvnw clean package -Dmaven.test.skip=true"
  }

  stage('Docker build') {
    sh "docker build -t $app_name:$app_version ."
  }

  stage('Docker push') {
    sh """
      ./ecs/docker_push.sh \
        $app_name \
        661382096004.dkr.ecr.us-east-1.amazonaws.com/spring_demo \
        $app_version
    """
  }

  stage('Git Tag') {
    sh("""
      git tag -a $app_version -m 'add tag for production release version $app_version'
      git push --tags
    """)
  }

  stage('Deploy Production') {
    sh """
      ./ecs/deploy.sh \
        spring_demo_service_production \
        $app_version \
        $app_name \
        arn:aws:elasticloadbalancing:us-east-1:661382096004:targetgroup/spring-demo-prod/613dff9151204b73 \
        8080 \
        Platform-Jenkins-EC2BuilderIamUser-6DB6WP8EH17K \
        bingo \
        production \
        bingo-pop
    """
  }
}
